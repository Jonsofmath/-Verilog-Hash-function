$date
	Thu Jul 15 12:26:41 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module test_bench $end
$var wire 2 ! type [1:0] $end
$var wire 8 " source1 [7:0] $end
$var wire 8 # source0 [7:0] $end
$var wire 1 $ reset $end
$var wire 8 % nonce_array3 [7:0] $end
$var wire 8 & nonce_array2 [7:0] $end
$var wire 8 ' nonce_array1 [7:0] $end
$var wire 8 ( nonce_array0 [7:0] $end
$var wire 1 ) fail $end
$var wire 1 * clk $end
$scope module COND $end
$var wire 2 + type [1:0] $end
$var wire 8 , source1 [7:0] $end
$var wire 8 - source0 [7:0] $end
$var wire 1 $ reset $end
$var wire 1 ) fail $end
$var wire 1 * clk $end
$var reg 1 . delay $end
$var reg 8 / nonce_array0 [7:0] $end
$var reg 8 0 nonce_array1 [7:0] $end
$var reg 8 1 nonce_array2 [7:0] $end
$var reg 8 2 nonce_array3 [7:0] $end
$var reg 8 3 nonce_int_0 [7:0] $end
$var reg 8 4 nonce_int_1 [7:0] $end
$var reg 8 5 nonce_int_2 [7:0] $end
$var reg 8 6 nonce_int_3 [7:0] $end
$upscope $end
$scope module TEST $end
$var wire 8 7 nonce_array0 [7:0] $end
$var wire 8 8 nonce_array1 [7:0] $end
$var wire 8 9 nonce_array2 [7:0] $end
$var wire 8 : nonce_array3 [7:0] $end
$var reg 1 * clk $end
$var reg 1 ) fail $end
$var reg 1 $ reset $end
$var reg 8 ; source0 [7:0] $end
$var reg 8 < source1 [7:0] $end
$var reg 2 = type [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bx -
bx ,
bx +
0*
x)
bx (
bx '
bx &
bx %
0$
bx #
bx "
bx !
$end
#20
b0 %
b0 2
b0 :
b0 &
b0 1
b0 9
b0 '
b0 0
b0 8
b0 (
b0 /
b0 7
1*
#40
0*
#60
1$
1*
#80
0*
#100
b0 !
b0 +
b0 =
b1000 "
b1000 ,
b1000 <
b100 #
b100 -
b100 ;
0)
1*
#120
0*
#140
1.
b100 4
b100 3
1*
#160
0*
#180
0.
b1100 %
b1100 2
b1100 :
b1100 &
b1100 1
b1100 9
b100 '
b100 0
b100 8
b100 (
b100 /
b100 7
1*
#200
0*
#220
1.
1*
#240
0*
#260
0.
1*
#280
0*
#300
b1 !
b1 +
b1 =
1.
1*
#320
0*
#340
0.
bx %
bx 2
bx :
bx &
bx 1
bx 9
b1100 '
b1100 0
b1100 8
1*
#360
0*
#380
1.
b100 5
1*
#400
0*
#420
0.
b1100 %
b1100 2
b1100 :
b100 &
b100 1
b100 9
1*
#440
0*
#460
1.
1*
#480
0*
#500
0.
b10 !
b10 +
b10 =
1*
#520
0*
#540
1.
b100 6
1*
#560
0*
#580
0.
b100 %
b100 2
b100 :
b1100 &
b1100 1
b1100 9
b100 '
b100 0
b100 8
b1100 (
b1100 /
b1100 7
1*
#600
0*
#620
1.
1*
#640
0*
#660
0.
1*
#680
0*
#700
1.
1*
#720
0*
#740
0.
1*
#760
0*
#780
1)
1.
1*
#800
0*
#820
b0 %
b0 2
b0 :
b0 &
b0 1
b0 9
b0 '
b0 0
b0 8
b0 (
b0 /
b0 7
1*
#840
0*
#860
1*
#880
0*
#900
1*
#920
0*
#940
1*
#960
0*
#980
1*
#1000
0*
#1020
1*
#1040
0*
#1060
1*
#1080
0*
#1100
1*
#1120
0*
#1140
1*
#1160
0*
#1180
1*
#1200
0*
#1220
1*
#1240
0*
#1260
1*
#1280
0*
#1300
1*
#1320
0*
#1340
1*
#1360
0*
#1380
1*
#1400
0*
#1420
1*
#1440
0*
#1460
1*
#1480
0*
#1500
1*
#1520
0*
#1540
1*
#1560
0*
#1580
1*
#1600
0*
#1620
1*
#1640
0*
#1660
1*
#1680
0*
#1700
1*
#1720
0*
#1740
1*
#1760
0*
#1780
1*
#1800
0*
#1820
1*
#1840
0*
#1860
b0 !
b0 +
b0 =
b100011 "
b100011 ,
b100011 <
b11110 #
b11110 -
b11110 ;
1*
