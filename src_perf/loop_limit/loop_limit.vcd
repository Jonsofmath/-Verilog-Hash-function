$date
	Mon Oct 11 21:10:45 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module test_bench $end
$var wire 1 ! stop $end
$var wire 1 " reset $end
$var wire 1 # fail $end
$var wire 16 $ current_loop_actualize [15:0] $end
$var wire 16 % current_loop [15:0] $end
$var wire 1 & clk $end
$scope module COND $end
$var wire 1 ! stop $end
$var wire 1 " reset $end
$var wire 3 ' loop_status [2:0] $end
$var wire 16 ( current_loop [15:0] $end
$var wire 1 & clk $end
$var reg 16 ) current_loop_actualize [15:0] $end
$var reg 1 # fail $end
$var reg 16 * loop_limit [15:0] $end
$scope module compare_inst $end
$var wire 16 + number1 [15:0] $end
$var wire 1 " reset $end
$var wire 16 , number0 [15:0] $end
$var wire 1 & clk $end
$var reg 3 - compare_var [2:0] $end
$upscope $end
$upscope $end
$scope module TEST $end
$var wire 16 . current_loop_actualize [15:0] $end
$var wire 1 # fail $end
$var reg 1 & clk $end
$var reg 16 / current_loop [15:0] $end
$var reg 1 " reset $end
$var reg 1 ! stop $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
0&
bx %
bx $
x#
0"
x!
$end
#20
b0 $
b0 )
b0 .
0#
0!
1&
#40
0&
#60
1"
1&
#80
0&
#100
b100 '
b100 -
b1001110001000 *
b1001110001000 +
b1111000 %
b1111000 (
b1111000 ,
b1111000 /
1&
#120
0&
#140
1#
b1 '
b1 -
1&
#160
0&
#180
b1111001 $
b1111001 )
b1111001 .
0#
b1001110010010 %
b1001110010010 (
b1001110010010 ,
b1001110010010 /
1&
#200
0&
#220
b1001110010011 $
b1001110010011 )
b1001110010011 .
b100 '
b100 -
1&
#240
0&
#260
b0 $
b0 )
b0 .
1#
b111001000 %
b111001000 (
b111001000 ,
b111001000 /
1&
#280
0&
#300
b1 '
b1 -
1&
#320
0&
#340
b111001001 $
b111001001 )
b111001001 .
0#
b1111101000000 %
b1111101000000 (
b1111101000000 ,
b1111101000000 /
1&
#360
0&
#380
b1111101000001 $
b1111101000001 )
b1111101000001 .
b100 '
b100 -
1&
#400
0&
#420
b0 $
b0 )
b0 .
1#
1&
#440
0&
#460
1&
#480
0&
#500
1&
#520
0&
#540
1&
#560
0&
#580
1&
#600
0&
#620
1!
1&
#640
0&
#660
1&
#680
0&
#700
1&
#720
0&
#740
1&
#760
0&
#780
1&
#800
0&
#820
1&
#840
0&
#860
1&
#880
0&
#900
1&
#920
0&
#940
1&
#960
0&
#980
1&
#1000
0&
#1020
1&
#1040
0&
#1060
1&
#1080
0&
#1100
1&
#1120
0&
#1140
1&
#1160
0&
#1180
1&
#1200
0&
#1220
1&
#1240
0&
#1260
1&
#1280
0&
#1300
1&
#1320
0&
#1340
1&
#1360
0&
#1380
1&
#1400
0&
#1420
1&
#1440
0&
#1460
1&
#1480
0&
#1500
1&
#1520
0&
#1540
1&
#1560
0&
#1580
1&
#1600
0&
#1620
1&
#1640
0&
#1660
1&
#1680
0&
#1700
b1111101000 %
b1111101000 (
b1111101000 ,
b1111101000 /
1&
